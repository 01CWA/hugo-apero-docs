---
title: "02: Create your site"
weight: 2
subtitle: ""
excerpt: "How to use the blogdown R package to create a new, update your theme for an existing site, or convert an existing site to this theme."
date: 2021-05-26
draft: false
---

## New site 

### Using RStudio

The best home for your new **blogdown** website project is inside an RStudio project. A quick way to create one is to use the RStudio New Project Wizard (`File -> New Project -> New Directory`) (see Figure \@ref(fig:new-project) and \@ref(fig:blogdown-project)).

```{r new-project, echo=FALSE, fig.cap='Create a new website project in RStudio.', out.width='80%', fig.align='center'}
knitr::include_graphics('new-project.png')
```

```{r blogdown-project, echo=FALSE, fig.cap='Create a website project based on blogdown.', out.width='80%', fig.align='center'}
knitr::include_graphics('blogdown-project.png')
```

Click "Create Project". The project wizard then runs a function that creates a new site for you by doing the following steps:

1. Creates and opens a new [RStudio Project](https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects) for the website;
1. Downloads and installs the Hugo Apéro theme (https://github.com/hugo-apero/) with an example site;
1. Adds a sample `.Rmd` post;
1. Creates a `netlify.toml` file to help you deploy your site to [Netlify,](https://www.netlify.com) and
1. Creates an `.Rprofile` file to set your **blogdown** options (some have been set up for you).

### Without RStudio

If you are not using RStudio, you can create a new empty directory, and call the `new_site()` function in the directory in the R console to create a new site project:

```r
blogdown::new_site(theme = "hugo-apero/hugo-apero",
                   format = "toml")

```

This will generate the theme's example site. To preview it locally, run:

```r
blogdown::serve_site()
```

Then you can edit or discard the pages under `content`, and change things in the site configuration (`config.toml`) file.

### Add GitHub at the end

To use Git/GitHub now with this site, the easiest way is to use the usethis package:

```r
# install.packages("usethis")
usethis::use_git()
usethis::use_github() # requires a GitHub PAT
```

## Update theme

To update your theme, inside your website project, use:

```r
blogdown::install_theme(theme = "hugo-apero/hugo-apero",
                        update_config = FALSE, 
                        force = TRUE)
```

## Existing site

To convert an existing Hugo site from another theme, there are quite a few steps, and it may not be a smooth process. I recommend doing this *in a branch* on GitHub.

First, to install this theme alongside one you'd like to convert from, use the same code as above for updating the theme files:

```r
blogdown::install_theme(theme = "hugo-apero/hugo-apero",
                        update_config = FALSE, 
                        force = TRUE)
```

Next, use `blogdown::hugo_version()` to check your local Hugo version:

```r
> blogdown::hugo_version()
[1] ‘0.80.0’
```

Make sure you have at least version 0.80.0 installed. If not, try `blogdown::install_hugo()`. To pin this Hugo version to your website project, use:

```r
> blogdown::config_Rprofile()
```

And add this line (make sure there is an empty line at the end of this file, and restart your R session to make these changes go into effect):

```r
options(blogdown.hugo.version = "0.80.0")
```

Now, the next steps are trial-and-error, depending on your theme. Here is [one user's steps followed](https://github.com/hugo-apero/hugo-apero-docs/issues/78) to convert from the Academic/Wowchemy theme, with corresponding commits in their repo:

1. Install theme alongside Academic [commit](https://github.com/spcanelon/silvia/commit/cc5d24d93676990675abc52145fd7a369c7bffa6)

1. Change `theme` to `hugo-apero` in `config.toml` [commit](https://github.com/spcanelon/silvia/commit/499cc959a947761b4dbc518f5a1bf6312527b517)

1. Copy all Academic shortcodes to `layouts/` in root [commit](https://github.com/spcanelon/silvia/commit/f3c7d5334b4effbd850b204eb267425f6740b4af)

1. Remove all assets in website root [commit](https://github.com/spcanelon/silvia/commit/3843c76a5da6184b2d9b547b18f96ec6810a695a)

1. Remove all custom layouts in website root [commit](https://github.com/spcanelon/silvia/commit/1ad7e3d491d309e71e1b4fa0bbad1e3af6b9d322)

1. Copy over Apéro example site `config.toml` file [commit](https://github.com/spcanelon/silvia/commit/db37289e768640522130f98353996de4a6e0abfc)

1. Remove Academic `config/` directory [commit](https://github.com/spcanelon/silvia/commit/5541f38871911d5067c6c8856936d54d183b3ec9)

